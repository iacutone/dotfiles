" Eric Iacutone
set modelines=1
set shell=zsh
set nocompatible
syntax enable

" Recursive searching into sub dirs
set path+=**

" Display matching files on tab complete
set wildmenu

" Make ctags
command! MakeTags !ctags -R .

" Yank to OSX clipboard
set clipboard=unnamed

" highlight current line
set cursorline

set incsearch " search as characters are entered
set hlsearch  " highlight matches

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

noremap <leader>s :Ack <C-R><C-W><CR> " map leader for Ack

" Easier window management
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Cmd + Shift tab change (only Mac Vim)
map <D-S-]> gt
map <D-S-[> gT]
" Vundle {{{
set nocompatible " be iMproved, required
filetype off     " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-rake'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-endwise'
Plugin 'janko-m/vim-test'
Plugin 'majutsushi/tagbar'
Plugin 'airblade/vim-gitgutter'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mattn/emmet-vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'Valloric/YouCompleteMe'
Plugin 'Raimondi/delimitMate'
Plugin 'rizzatti/dash.vim'
Plugin 'vim-syntastic/syntastic'
Plugin 'mileszs/ack.vim'
Plugin 'stefanoverna/vim-i18n'
Plugin 'pbrisbin/vim-mkdir'
Plugin 'altercation/vim-colors-solarized'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'easymotion/vim-easymotion'
Plugin 'rhysd/devdocs.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'rstacruz/sparkup'
Plugin 'farseer90718/vim-taskwarrior'
Plugin 'tbabej/taskwiki'
Plugin 'vimwiki/vimwiki'
Plugin 'mhinz/vim-startify'
Plugin 'bogado/file-line'
Plugin 'elixir-lang/vim-elixir'
Plugin  'c-brenn/phoenix.vim'
" Plugin 'tpope/vim-projectionist'
" Plugin 'godlygeek/tabular'
" Plugin 'ervandew/supertab'
" Plugin 'Chiel92/vim-autoformat'
" Plugin 'posva/vim-vue'
Plugin 'ElmCast/elm-vim'
" Plugin 'lambdatoast/elm.vim'
" Plugin 'benmills/vimux
call vundle#end()
filetype plugin indent on
" }}}

set autoindent

" Only do this part when compiled with support for autocommands
if has("autocmd")
  autocmd FileType ruby,haml,eruby,yaml,html,javascript,sass,css,scss,cucumber,coffee,sh setlocal ai sw=2 sts=2 et
  autocmd FileType elm setlocal sw=4 sts=4 ts=4
  autocmd BufWritePre *.rb,*.js :call <SID>StripTrailingWhitespaces()
endif

function! <SID>StripTrailingWhitespaces()
   " Preparation: save last search, and cursor position.
   let _s=@/
   let l = line(".")
   let c = col(".")
   " Do the business:
   %s/\s\+$//e
   " Clean up: restore previous search history, and cursor position
   let @/=_s
   call cursor(l, c)
endfunction

let mapleader = ','
set background=dark
let g:solarized_termcolors=256
colorscheme solarized
set backspace=indent,eol,start
set encoding=utf-8

set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_user_command = 'ack -i --noenv --nocolor --nogroup -g "" %s'


" http://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/
let g:ctrlp_working_path_mode = 'r'

nmap <silent> <leader>s :TestNearest<CR>
nmap <silent> <leader>t :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>
" let test#strategy = "dispatch"
let test#filename_modifier = ':.'

let g:tagbar_ctags_bin='/usr/local/bin/ctags'
let g:tagbar_width=30
noremap <silent> <Leader>y :TagbarToggle
let b:surround_{char2nr('=')} = "<%= \r %>"
let b:surround_{char2nr('-')} = "<% \r %>"
let g:airline_theme='jellybeans'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
vmap <Leader>z :call I18nTranslateString()<CR>
vmap <Leader>dt :call I18nDisplayTranslation()<CR>

set laststatus=2
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

map <leader>C :CtrlPClearCache<cr>

nmap <silent> <leader>dd <Plug>(devdocs-under-cursor)
nmap <silent> <leader>da <Plug>DashSearch

let g:task_rc_override = 'rc.defaultwidth=0'
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

"
" vim:foldmethod=marker:foldlevel=0
